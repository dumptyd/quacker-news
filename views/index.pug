doctype html
html.no-js(lang='')
  head
    meta(charset='utf-8')
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    title Quacker News
    meta(name='description', content='A basic hackernews clone')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css')
    link(rel='stylesheet', href='/css/main.css')
  body
    .container.padtop
      .blue.header
        a(href='/').bold.inline Quacker News
        .padleft.inline
          a.padleft.padright(href='/new',class=page==='new'?'white':'') new
          |  |
          a.padleft.padright(href='/comments') comments
          |  |
          a.padleft.padright(href='/show',class=page==='show'?'white':'') show
          |  |
          a.padleft.padright(href='/ask',class=page==='ask'?'white':'') ask
          |  |
          a.padleft.padright(href='/submit') submit
        .padright.inline.pull-right
          if authenticated==true
            a.padleft.padright(href='/user/'+user) #{user}
            |  |
            a.padleft.padright(href='/logout') logout
          else
            a.padleft.padright(href='/login') login
      .grey.posts
        each post in posts
          div.padbottom
            table
              tr
                td(style='vertical-align:top;').small.margintop
                  a(href='',title='upvote',style='display:block;').small.gray-font &#9650;
                  //a(href='',title='downvote').small.gray-font &#9660;
                  //a(href=post.url||'/thread/'+post._id).marginleft #{post.title}
                td
                  a(href=post.url||'/thread/'+post._id) #{post.title}
                  if post.url
                    span.gray-font.small  
                      a.small.gray-font (#{node_url.parse(post.url).hostname})
                  br
                  span.info.gray-font.small 
                    span.small #{post.upvotes.length} points by 
                      a(href='/user/'+post.author.local.username) #{post.author.local.username}
                      |  #{moment(post.createdAt).fromNow()} | 
                    a(href='/thread/'+post._id).gray-font.small #{post.comments.length} comments
                